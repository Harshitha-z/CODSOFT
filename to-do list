import tkinter as tk
from tkinter import messagebox  

class ToDoListApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List Application")
        self.root.geometry("400x500")

        self.tasks = []

        self.task_input = tk.Entry(root, width=40)
        self.task_input.pack(pady=10)

        self.add_button = tk.Button(root, text="Add Task", command=self.add_task)
        self.add_button.pack(pady=5)

        self.tasks_listbox = tk.Listbox(root, width=50, height=15)
        self.tasks_listbox.pack(pady=10)

        self.update_button = tk.Button(root, text="Update Task", command=self.update_task)
        self.update_button.pack(pady=5)

        self.delete_button = tk.Button(root, text="Delete Task", command=self.delete_task)
        self.delete_button.pack(pady=5)

        self.clear_button = tk.Button(root, text="Clear All Tasks", command=self.clear_tasks)
        self.clear_button.pack(pady=5)

    def add_task(self):
        task = self.task_input.get()
        if task:
            self.tasks.append(task)
            self.tasks_listbox.insert(tk.END, task)
            self.task_input.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "You must enter a task!")

    def update_task(self):
        selected_task_index = self.tasks_listbox.curselection()
        if selected_task_index:
            updated_task = self.task_input.get()
            if updated_task:
                self.tasks[selected_task_index[0]] = updated_task
                self.tasks_listbox.delete(selected_task_index)
                self.tasks_listbox.insert(selected_task_index, updated_task)
                self.task_input.delete(0, tk.END)
            else:
                messagebox.showwarning("Warning", "You must enter a new task!")
        else:
            messagebox.showwarning("Warning", "You must select a task to update!")

    def delete_task(self):
        selected_task_index = self.tasks_listbox.curselection()
        if selected_task_index:
            self.tasks.pop(selected_task_index[0])
            self.tasks_listbox.delete(selected_task_index)
        else:
            messagebox.showwarning("Warning", "You must select a task to delete!")

    def clear_tasks(self):
        self.tasks.clear()
        self.tasks_listbox.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    app = ToDoListApp(root)
    root.mainloop()
